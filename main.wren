import "./vector" for Vector

var v2 = Vector.new(2.3, -3.4)
var v3 = Vector.new(2.3, -3.4, 4.5)
var v4 = Vector.new(2.3, -3.4, 4.5, 5.6)

System.print("\n\n2D Vector\n=========\n")
System.print( v2 )
System.print( v2.magnitude )
System.print( v2.normalise )
System.print( v2.abs)
System.print( v2.floor)
System.print( v2.ceil)
System.print( v2 + v2 )
System.print( v2 - v2 )
System.print( v2 * v2 )
System.print( v2 / v2 )
System.print( v2 * 2 )
System.print( v2 / 2 )
System.print( v2.dot( Vector.new( 1, 1 ) ) )
System.print( v2 == Vector.new(2.3, -3.4) )
System.print( v2 == Vector.new(1, 1) )

System.print("\n\n3D Vector\n=========\n")
System.print( v3 )
System.print( v3.magnitude )
System.print( v3.normalise )
System.print( v3.abs)
System.print( v3.floor)
System.print( v3.ceil)
System.print( v3 + v3 )
System.print( v3 - v3 )
System.print( v3 * v3 )
System.print( v3 / v3 )
System.print( v3 * 3 )
System.print( v3 / 3 )
System.print( v3.dot( Vector.new( 1, 1, 1 ) ) )
System.print( v3 == Vector.new(2.3, -3.4, 4.5) )
System.print( v3 == Vector.new(1, 1, 1) )
System.print( v3.cross( Vector.new( 1, 1, 1 ) ) )

System.print("\n\n4D Vector\n=========\n")
System.print( v4 )
System.print( v4.magnitude )
System.print( v4.normalise )
System.print( v4.abs)
System.print( v4.floor)
System.print( v4.ceil)
System.print( v4 + v4 )
System.print( v4 - v4 )
System.print( v4 * v4 )
System.print( v4 / v4 )
System.print( v4 * 4 )
System.print( v4 / 4 )
System.print( v4.dot( Vector.new( 1, 1, 1, 1 ) ) )
System.print( v4 == Vector.new(2.3, -3.4, 4.5, 5.6) )
System.print( v4 == Vector.new(1, 1, 1, 1) )
